% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/fastrank.R
\docType{package}
\name{fastrank-package}
\alias{fastrank-package}
\title{Ranking vectors with low overhead}
\description{
An R package providing fast ranking for integer and numeric vectors, as an
alternative to calling .Internal(rank(...)), which packages cannot do.
}
\details{
The motivation for this comes from my development of the `nestedRanksTest`
package.  A standard run with the default 10,000 bootstrap iterations takes
a few seconds to complete on a test data set.

~~~~
> library(nestedRanksTest)
> data(woodpecker_multiyear)
> adat <- subset(woodpecker_multiyear, Species == "agrifolia")
> system.time(with(adat, nestedRanksTest(y = Distance, x = Year, groups = Granary)))
   user  system elapsed
  5.252   0.067   5.318
~~~~

~~~~
> library(microbenchmark)
> rank_new <- function (x) .Internal(rank(x, length(x), "average"))
> yy <- rnorm(100)
> microbenchmark(rank(yy), rank_new(yy), times=100000)
Unit: microseconds
         expr    min     lq      mean median      uq       max neval
     rank(yy) 29.148 31.945 36.931556 32.678 33.5165 57192.350 1e+05
 rank_new(yy)  3.755  4.300  4.789952  4.542  4.7290  6784.741 1e+05
~~~~

For 1000-value vectors the speedup is more modest, about 2&times;, and for
10,000-value vectors the speedup is only in the neighbourhood of 20-30%:

~~~~
> yyy <- rnorm(1000)
> microbenchmark(rank(yyy), rank_new(yyy), times=100000)
Unit: microseconds
          expr     min      lq      mean  median      uq      max neval
     rank(yyy) 114.693 118.766 134.38290 120.071 123.598 18734.74 1e+05
 rank_new(yyy)  63.150  64.877  67.71052  65.340  67.062 16023.45 1e+05
> yyy <- rnorm(10000)
> microbenchmark(rank(yyy), rank_new(yyy), times=1000)
Unit: microseconds
          expr      min        lq    mean   median        uq      max neval
     rank(yyy) 1238.485 1263.3515 1361.22 1279.580 1303.5785 6436.039  1000
 rank_new(yyy)  955.013  964.9215 1002.81  967.849  992.6315 6072.219  1000
}
\note{
* http://stat.ethz.ch/R-manual/R-devel/library/base/html/sort.html
* http://stat.ethz.ch/R-manual/R-devel/library/base/html/xtfrm.html.
* https://stat.ethz.ch/R-manual/R-devel/library/base/html/order.html
* Dependent on R >= 3.0.0, so I only worry about long vectors?
}
\references{
\url{https://github.com/douglasgscofield/fastrank}
}

